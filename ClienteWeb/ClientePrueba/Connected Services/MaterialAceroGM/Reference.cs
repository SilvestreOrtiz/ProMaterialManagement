//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientePrueba.MaterialAceroGM {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AceroGMaquinaria", Namespace="http://schemas.datacontract.org/2004/07/WSMateriales.Entidades")]
    [System.SerializableAttribute()]
    public partial class AceroGMaquinaria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcabadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedidasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_acerogmField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acabado {
            get {
                return this.AcabadoField;
            }
            set {
                if ((object.ReferenceEquals(this.AcabadoField, value) != true)) {
                    this.AcabadoField = value;
                    this.RaisePropertyChanged("Acabado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calidad {
            get {
                return this.CalidadField;
            }
            set {
                if ((object.ReferenceEquals(this.CalidadField, value) != true)) {
                    this.CalidadField = value;
                    this.RaisePropertyChanged("Calidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medidas {
            get {
                return this.MedidasField;
            }
            set {
                if ((object.ReferenceEquals(this.MedidasField, value) != true)) {
                    this.MedidasField = value;
                    this.RaisePropertyChanged("Medidas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Perfil {
            get {
                return this.PerfilField;
            }
            set {
                if ((object.ReferenceEquals(this.PerfilField, value) != true)) {
                    this.PerfilField = value;
                    this.RaisePropertyChanged("Perfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_acerogm {
            get {
                return this.id_acerogmField;
            }
            set {
                if ((this.id_acerogmField.Equals(value) != true)) {
                    this.id_acerogmField = value;
                    this.RaisePropertyChanged("id_acerogm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MaterialAceroGM.IMaterialAceroGM")]
    public interface IMaterialAceroGM {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Insertar", ReplyAction="http://tempuri.org/IMaterialAceroGM/InsertarResponse")]
        bool Insertar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Insertar", ReplyAction="http://tempuri.org/IMaterialAceroGM/InsertarResponse")]
        System.Threading.Tasks.Task<bool> InsertarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Editar", ReplyAction="http://tempuri.org/IMaterialAceroGM/EditarResponse")]
        void Editar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Editar", ReplyAction="http://tempuri.org/IMaterialAceroGM/EditarResponse")]
        System.Threading.Tasks.Task EditarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Eliminar", ReplyAction="http://tempuri.org/IMaterialAceroGM/EliminarResponse")]
        bool Eliminar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/Eliminar", ReplyAction="http://tempuri.org/IMaterialAceroGM/EliminarResponse")]
        System.Threading.Tasks.Task<bool> EliminarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarTodos", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarTodosResponse")]
        ClientePrueba.MaterialAceroGM.AceroGMaquinaria[] ConsultarTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarTodos", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarTodosResponse")]
        System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria[]> ConsultarTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarPorCalidad", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarPorCalidadResponse")]
        ClientePrueba.MaterialAceroGM.AceroGMaquinaria[] ConsultarPorCalidad(string calidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarPorCalidad", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarPorCalidadResponse")]
        System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria[]> ConsultarPorCalidadAsync(string calidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarPorId", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarPorIdResponse")]
        ClientePrueba.MaterialAceroGM.AceroGMaquinaria ConsultarPorId(string id_acerogm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaterialAceroGM/ConsultarPorId", ReplyAction="http://tempuri.org/IMaterialAceroGM/ConsultarPorIdResponse")]
        System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria> ConsultarPorIdAsync(string id_acerogm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialAceroGMChannel : ClientePrueba.MaterialAceroGM.IMaterialAceroGM, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialAceroGMClient : System.ServiceModel.ClientBase<ClientePrueba.MaterialAceroGM.IMaterialAceroGM>, ClientePrueba.MaterialAceroGM.IMaterialAceroGM {
        
        public MaterialAceroGMClient() {
        }
        
        public MaterialAceroGMClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialAceroGMClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialAceroGMClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialAceroGMClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Insertar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            return base.Channel.Insertar(acerogm);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            return base.Channel.InsertarAsync(acerogm);
        }
        
        public void Editar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            base.Channel.Editar(acerogm);
        }
        
        public System.Threading.Tasks.Task EditarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            return base.Channel.EditarAsync(acerogm);
        }
        
        public bool Eliminar(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            return base.Channel.Eliminar(acerogm);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAsync(ClientePrueba.MaterialAceroGM.AceroGMaquinaria acerogm) {
            return base.Channel.EliminarAsync(acerogm);
        }
        
        public ClientePrueba.MaterialAceroGM.AceroGMaquinaria[] ConsultarTodos() {
            return base.Channel.ConsultarTodos();
        }
        
        public System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria[]> ConsultarTodosAsync() {
            return base.Channel.ConsultarTodosAsync();
        }
        
        public ClientePrueba.MaterialAceroGM.AceroGMaquinaria[] ConsultarPorCalidad(string calidad) {
            return base.Channel.ConsultarPorCalidad(calidad);
        }
        
        public System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria[]> ConsultarPorCalidadAsync(string calidad) {
            return base.Channel.ConsultarPorCalidadAsync(calidad);
        }
        
        public ClientePrueba.MaterialAceroGM.AceroGMaquinaria ConsultarPorId(string id_acerogm) {
            return base.Channel.ConsultarPorId(id_acerogm);
        }
        
        public System.Threading.Tasks.Task<ClientePrueba.MaterialAceroGM.AceroGMaquinaria> ConsultarPorIdAsync(string id_acerogm) {
            return base.Channel.ConsultarPorIdAsync(id_acerogm);
        }
    }
}
